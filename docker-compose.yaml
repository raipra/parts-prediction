version: "3.8"

volumes:
  postgresql-mlflow-data:
  mlflow-artifact-store:
  mlflow-backend-store:

x-app-template: &APP_TEMPLATE
  user: "${USER_ID:-1000}"
  hostname: "${HOST_NAME:-aiflows}"
  image: parts-prediction
  platform: linux/amd64
  build:
    context: .
    dockerfile: ./docker/Dockerfile
    args:
      USER_NAME: "${USER_NAME:-prashanthrai}"
      USER_ID: "${USER_ID:-1000}"
  env_file:
    - .envs/.mlflow-common
  volumes:
    - ./:/app/
    - mlflow-artifact-store:/mlflow-artifact-store
    - ~/.config/gcloud/:/home/${USER_NAME}/.config/gcloud
  ipc: host
  init: true

services:
  mlflow-db:
    container_name: mlflow-backend-store
    image: postgres:14
    env_file:
      - .envs/.postgres
      - .envs/.mlflow-dev
    volumes:
      - postgresql-mlflow-data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    profiles:
      - ci
      - dev

  app-dev:
    <<: *APP_TEMPLATE
    container_name: parts-prediction-dev-container
    ports:
      - ${LOCAL_DEV_MLFLOW_SERVER_PORT}:${LOCAL_DEV_MLFLOW_SERVER_PORT}
      - 8080:8080
      - 8888:8888
      - 8001:8001
    profiles:
      - dev
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
  app-prod:
    <<: *APP_TEMPLATE
    container_name: parts-prediction-prod-container
    env_file:
      - .envs/.mlflow-prod
      - .envs/.infrastructure
    ports:
      - ${PROD_MLFLOW_SERVER_PORT}:${PROD_MLFLOW_SERVER_PORT}
    profiles:
      - prod

  app-ci:
    <<: *APP_TEMPLATE
    container_name: parts-prediction-ci-container
    ports:
      - ${LOCAL_DEV_MLFLOW_SERVER_PORT}:${LOCAL_DEV_MLFLOW_SERVER_PORT}
      - 8080:8080
      - 8888:8888
      - 8001:8001
    profiles:
      - ci
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]